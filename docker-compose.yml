version: '3.7'
services:
    postgres:
        image: postgres:13.4
        container_name: air_postgres_0        
        environment:
            - POSTGRES_USER=airflow
            - POSTGRES_PASSWORD=airflow
            - POSTGRES_DB=airflow
        logging:
            options:
                max-size: 10m
                max-file: "3"            
        ports:
          - 5432:5432
    webserver:
        image: saastoolset/sqlg-airflow-test:latest
        restart: always
        container_name: air_webserver_0
        depends_on:
          - postgres
        environment:
          - TZ=Asia/Taipei
          - LOAD_EX=n
          - EXECUTOR=Local
          - AIRFLOW__CORE__EXECUTOR=LocalExecutor
          - AIRFLOW__CORE__FERNET_KEY=xfaECYb20a2PzNTcIYXFXztTlaEVD43KwUoXeer_83k=
          - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
          - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=False
          #- AIRFLOW__WEBSERVER__RBAC=False          
          - BOOTSTRAP_SERVER=host.docker.internal:19092
          - SECURITY_PROTOCOL=PLAINTEXT
          - KAFKA_TOPIC_NAME=kafka_example1
          - KAFKA_API_KEY=None
          - KAFKA_API_SECRET=None
        logging:
            options:
                max-size: 10m
                max-file: "3"
        volumes:
          - ./config/airflow.cfg:/usr/local/airflow/airflow.cfg                
          - ./config/var.json:/usr/local/airflow/var.json          
          - ./config/conn.json:/usr/local/airflow/conn.json          
          #- ./config/tnsnames.ora:/usr/lib/oracle/11.2/client64/network/admin/tnsnames.ora          
          - ./etl_base:/usr/local/airflow/etl_base
          - ./etl_base/dags:/usr/local/airflow/dags
          - ./etl_base/sql:/usr/local/airflow/sql
          # - /home/FTP:/usr/local/airflow/etl_base/SOURCE
          - ./bin:/usr/local/airflow/bin
          - ./logs:/usr/local/airflow/logs
          - ./etl_base/requirements.txt:/requirements.txt
        ports:
          - 8080:8080
        command: webserver
        healthcheck:
            test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
            interval: 30s
            timeout: 30s
            retries: 3

    zookeeper:
        image: confluentinc/cp-zookeeper:7.3.2
        container_name: zookeeper
        environment:
          ZOOKEEPER_CLIENT_PORT: 2181
          ZOOKEEPER_TICK_TIME: 2000

    broker:
        image: confluentinc/cp-kafka:7.3.2
        container_name: broker
        ports:
        # To learn about configuring Kafka for access across networks see
        # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
          - "9092:9092"
        depends_on:
          - zookeeper
        environment:
          KAFKA_BROKER_ID: 1
          KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
          LISTENERS: PLAINTEXT://:9092,DOCKER_HACK://:19092
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,DOCKER_HACK:PLAINTEXT
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,DOCKER_HACK://host.docker.internal:19092
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
          KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1